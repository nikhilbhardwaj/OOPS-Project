Reliable interpolation of multivariate scattered data
	
lip interpolates scattered multivariate data with a lipschitz function.

methods of interpolation of multivariate scattered data are scarce.
the programming library lip implements a
new method by g. beliakov, which relies on building reliable lower and
upper approximations of lipschitz functions. if we assume that the
function that we want to interpolate is lipschitz-continuous, we can
provide tight bounds on its values at any point, in the worse case
scenario. thus we obtain the interpolant, which approximates the unknown
lipschitz function f  best in the worst case scenario. this translates
into reliable learning of f, something that other methods cannot do (the
error of approximation of most other methods can be infinitely large,
depending on what f generated the data).

lipschitz condition implies that the rate of change of the function is
bounded:

|f(x)-f(y)|<m||x-y||.

it is easily interpreted as the largest slope of the function f. f needs
not be differentiable.

the interpolant based on the lipschitz properties of the function is
piecewise linear, it possesses many useful properties, and it is shown
that it is the best possible approximation to f in the worst case
scenario. the value of the interpolant depends on the data points in the
immediate neigbourhood of the point in question, and in this sense, the
method is similar to the natural neighbour interpolation.

there are two methods of construction and evaluation of the interpolant.
the explicit method processes all data points to find the neighbours of
the point in question. it does not require any preprocessing, but the
evaluation of the interpolant has linear complexity o(k) in terms of the
number of data.

"fast" method requires substantial preprocessing in the case of more
than 3-4 variables, but then it provides o(log k) evaluation time, and
thus is suitable for very large data sets (k of order of 500000) and
modest dimension (n=1-4). for larger dimension, explicit method becomes
practically more efficient. the class library lip implements both fast
and explicit methods.