Ocaml cross-compiler based on mingw32
	
objective caml (ocaml) is an implementation of the ml language, based on
the caml light dialect extended with a complete class-based object system
and a powerful module system in the style of standard ml.

ocaml comprises two compilers. one generates bytecode
which is then interpreted by a c program. this compiler runs quickly,
generates compact code with moderate memory requirements, and is
portable to essentially any 32 or 64 bit unix platform. performance of
generated programs is quite good for a bytecoded implementation:
almost twice as fast as caml light 0.7. this compiler can be used
either as a standalone, batch-oriented compiler that produces
standalone programs, or as an interactive, toplevel-based system.

the other compiler generates high-performance native code for a number
of processors. compilation takes longer and generates bigger code, but
the generated programs deliver excellent performance, while retaining
the moderate memory requirements of the bytecode compiler. it is not
available on all arches though.

this package contains everything needed to build ocaml code targeted
to be executed under windows.