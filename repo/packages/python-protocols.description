Open protocols and component adaptation for python
	
do you hate having to write lots of if-then logic to test what type something
is? wouldn't it be nice if you could just declare "i want this object to have
this behavior" and magically convert whatever value you have, to the type you
need? pyprotocols lets you do just that, cleanly, quickly, and robustly --
even with built-in types or other people's classes.

pyprotocols extends the pep 246 adapt() function with a new "declaration api"
that lets you easily define your own protocols and adapters, and declare what
adapters should be used to adapt what types, objects, or protocols. in
addition to its own interface type, pyprotocols can also use twisted and
zope's interface types too. (of course, since twisted and zope interfaces
aren't as flexible, only a subset of the pyprotocols api works with them.
specific limitations are listed in the documentation.)