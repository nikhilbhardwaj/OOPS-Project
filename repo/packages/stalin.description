An extremely aggressive scheme compiler
	
stalin is an aggressive self-hosting scheme compiler, designed to
generate resource efficient stand-alone executables with very high
computational performance.  it is a batch mode compiler like gcc, not
an interpreter, and is designed to be used only after your code has
stabilized.

it places a few limitations on the content of the source code.  for
example, you may not not load or eval new expressions or procedure
definitions at runtime, but in exchange, it is able to perform
various global analyses which may allow it to transparently map
scheme types to c types and to use native c arithmetic operations on
a per-expression basis, whenever such operations are proven safe.
further stalin can often reduce or eliminate run-time type checking
and dispatching, and omit garbage collection for data of limited
scope or accessibility, while omitting unreachable data altogether.

stalin also has a foreign procedure interface to both xlib and opengl.